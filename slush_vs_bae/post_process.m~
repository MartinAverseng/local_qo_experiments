%% Path and cleaning

clear all;
close all;

cd ..
addpath(genpath('ffmatlib'));
cd slush_vs_bae/

%% Data retrieval

g = 1;
k = 50;
[p,b,t]=ffreadmesh(['export_mesh_g', num2str(g),'_k_',num2str(k),'.msh']);
[vh]=ffreaddata(['export_vh_g', num2str(g),'_k_',num2str(k),'.txt']);
u=ffreaddata(['export_data_g', num2str(g),'_k_',num2str(k),'.txt']);

xm = -0.15;
xM = xm+0.3;
xC = (xM + xm)/2;

ym = -0.15;
yM = ym + 0.3;
yC = (yM + ym)/2;
N = ceil(0.3*200*k/(2*pi));
x = linspace(xm,xM,N);
y = linspace(ym,yM,N);
[X,Y] = meshgrid(x,y);

uinterp = ffinterpolate(p,b,t,vh,X,Y,u);
uex = bumpSource(X,Y).*finc(k,X,Y); 


%% Fourier analysis
close all;

r0c = sqrt((X - xC).^2 + (Y - yC).^2);
Rbump = 0.;
bump = (exp(1.)*exp(-1./(1 - (r0c/Rbump).^2)));
bump(r0c >= Rbump) = 0;

w = bump.*(uinterp - uex);

% f = k/2pi

%ffpdeplot(p,b,t,'VhSeq',vh,'XYData',log(1e-10 + abs(real(u)))/log(10),'ZStyle','continuous','Mesh','off');
figure
imagesc(x,y,real(w));
title("Interpolated function")
W = fftshift(fft2(w));



l1 = sqrt(sum(sum(abs(W).^2)));

Fsx = N/(xM - xm);
Fsy = N/(yM - ym);

fx = (-N/2:N/2-1)/N*Fsx;
fy = (-N/2:N/2-1)/N*Fsy;

kx = 2*pi*fx;
ky = 2*pi*fy;

[Kx,Ky] = meshgrid(kx,ky);

WLF = W;
WLF((Kx.^2 + Ky.^2)>(2*k)^2)= 0;

w2 = ifft2(ifftshift(WLF));
figure;
imagesc(x,y,real(w2));
title("Low-frequency part of w")
figure;
imagesc(x,y,real(w-w2));
title("High-frequency part of w")

l2 = sqrt(l1^2 - sum(sum(abs(WLF).^2)));
rho = l2/l1
